 1x2-7x+9@0
^
^
11111111111
00000000000
0123456789a
^
^
10-length

o3solve(x = 0x0100):
	s[] = {0, /*1*/ 0, /*2*/ 0, /*3*/ 0, /*4*/ ?, /*5*/ ?, 0x0100}
	b = 10
	s[5] = d = 0x10a /*last char to process*/ is 0x0100+0x000a //528
	x += 1 is 0x0101 //529
	  
getpoly(x = 0x0101, s /* will use 2/5 slots for digits, fill in a0-a3 */):
	x <= s[5] is 0x010a //45
	  
	get5bcd(x = 0x0101, y /* value, number of digits in b */):
		y = 0 //114
	 	a = 0 //115

		peekdig(x = 0x0101, a /* changed from 0 to sign */):
			b = '1'
		x += 1 is 0x0102 //121
		y -= 5 is -5 //122
		y += 6 is 1 //123
		b &= 0x0f is 1 //124
		s[-1] = b is 1 //126
		peekdig(x = 0x0102, a is 0):
			b = 'x'
		b is 'x' //131
		a is 0 //135
		d0to32k(y is 1, s):
			// return PC is at s[-3],s[-2]
			s[-5] = x is preserved //32
			x = 0 //33
			s[-7] = y is 1 //34
			x = 0 //36
			d = &s[-2] //38
			b = d[y] is 1 //40
			x += b is 1 //41
			y -= 1 is 0 //42
			y = x is 1 //43
			d = s[-7] is 1 /* element to pop */ //45
			x = s[-5] is preserved //46
		s popped back to &s[0] //135

	b is 1 /* characters converted */ // 48
	
